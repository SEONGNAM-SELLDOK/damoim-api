### 구직 작성
POST http://localhost:8080/recruits
Content-Type: application/json

{
  "register": "오성록",
  "company": "Naver",
  "title": "서비스를 함께 할 팀원을 모집합니다.",
  "location": "판교역 그린팩토리",
  "reward": 300000,
  "tags": ["복지"],
  "description": "웹/앱 서비스의 코어 개발을 담당하시며 빠르고 안정적인 서비스 구현의 핵심적인 역할을 수행하게 됩니다.",
  "deadline": "2021-05-30"
}

> {%
client.test("Request executed successfully", function() {
    client.log("response.body" + response.body)
    client.assert(response.status === 201, "Response status is not 201, it is " + response.status);
});
%}

### 구직 가져오기
GET http://localhost:8080/recruits/1
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
    client.log("response.body" + response.body)
    client.assert(response.status === 200, "Response status is not 200, it is " + response.status);
});
%}

### 구직 업데이트
PUT http://localhost:8080/recruits
Content-Type: application/json

{
  "id": 1,
  "register": "오성록",
  "company": "Never",
  "title": "회사이름 변경",
  "location": "판교역 그린팩토리",
  "reward": 300000,
  "tags": ["복지"],
  "description": "웹/앱 서비스의 코어 개발을 담당하시며 빠르고 안정적인 서비스 구현의 핵심적인 역할을 수행하게 됩니다.",
  "deadline": "2021-05-30"
}

> {%
client.test("Request executed successfully", function() {
    client.log("response.body" + response.body)
    client.assert(response.status === 200, "Response status is not 200, it is " + response.status);
});
%}

### 구직 삭제
DELETE http://localhost:8080/recruits/1
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
    client.log("response.body" + response.status)
    client.assert(response.status === 204, "Response status is not 204, it is " + response.status);
});
%}

### 다른 조건 넣기
POST http://localhost:8080/recruits
Content-Type: application/json

{
  "register": "오성록",
  "company": "우아한형제들",
  "title": "백엔드 개발자 모집",
  "location": "잠실역",
  "reward": 300000,
  "tags": ["맥북"],
  "description": "우아한 개발자를 모십니다.",
  "deadline": "2021-05-20"
}


### 조건 구직 가져오기
GET http://localhost:8080/recruits?company=우아
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
    client.log("response.body" + response.body)
    client.assert(response.status === 200, "Response status is not 20, it is " + response.status);
});
%}